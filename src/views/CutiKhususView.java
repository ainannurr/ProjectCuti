/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package views;

import controllers.CutiKhususController;
import entities.CutiKhusus;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import tools.MyConnection;

/**
 *
 * @author Simbok_pc
 */
public class CutiKhususView extends javax.swing.JInternalFrame {

    private CutiKhususController cutiKhususController;
    /**
     * Creates new form CutiKhususView
     */
    public CutiKhususView() {
        initComponents();
        this.cutiKhususController = new CutiKhususController(new MyConnection().getConnection());
        bindingTable();
        reset();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblCutiKhusus = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtCutiKhususID = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtNamaCuti = new javax.swing.JTextField();
        btnSave = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnDrop = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Cuti Khusus");

        tblCutiKhusus.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tblCutiKhusus.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblCutiKhususMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblCutiKhusus);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Cuti Khusus"));

        jLabel1.setText("Cuti Khusus ID");

        txtCutiKhususID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCutiKhususIDActionPerformed(evt);
            }
        });

        jLabel2.setText("Nama Cuti");

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnEdit.setText("Edit");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnDrop.setText("Drop");
        btnDrop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDropActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addGap(64, 64, 64)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtCutiKhususID, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addComponent(txtNamaCuti)))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnDrop)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnEdit)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSave))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtCutiKhususID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtNamaCuti, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 56, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSave)
                    .addComponent(btnEdit)
                    .addComponent(btnDrop))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 595, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtCutiKhususIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCutiKhususIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCutiKhususIDActionPerformed
    
    /**
     * fungsi yang digunakan untuk menyimpan data ketika menekan tombol save
     * @param evt 
     */
    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
       boolean flag = this.cutiKhususController.save(txtCutiKhususID.getText(), txtNamaCuti.getText());
       String message = "Failed to save data...";
        if (flag){
            message = "Success to save data...";
        }
        JOptionPane.showMessageDialog(this, message, "Allert / Notification", 
                JOptionPane.INFORMATION_MESSAGE);
        
        bindingTable();
        reset();
    }//GEN-LAST:event_btnSaveActionPerformed
    
    /**
     * fungsi yang digunakan untuk menyimpan data ketika menekan tombol edit
     * @param evt 
     */
    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        boolean flag = this.cutiKhususController.edit(txtCutiKhususID.getText(), txtNamaCuti.getText());
        String message = "Failed to edit data";
        if (flag){
            message = "Success to edit data";
        }
        JOptionPane.showMessageDialog(this, message, "Notification", JOptionPane.INFORMATION_MESSAGE);
        bindingTable();
        reset();
    }//GEN-LAST:event_btnEditActionPerformed
    
    /**
     * fungsi yang digunakan untuk menampilkan data ke text filed ketika memilih data
     * @param evt 
     */
    private void tblCutiKhususMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblCutiKhususMouseClicked
        int row = tblCutiKhusus.getSelectedRow();
        txtCutiKhususID.setText(tblCutiKhusus.getValueAt(row, 0).toString());
        txtNamaCuti.setText(tblCutiKhusus.getValueAt(row, 1).toString());
    }//GEN-LAST:event_tblCutiKhususMouseClicked
    
    /**
     * fungsi yang digunakan untuk menghapus data ketika menekan tombol drop
     * @param evt 
     */
    private void btnDropActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDropActionPerformed
        String message = "Failed to edit data...";
        int flag = JOptionPane.showConfirmDialog(this, "Tenane?", "APA KOE YAKIN MEH NGEHAPUS?", 
                JOptionPane.YES_NO_OPTION);
        if (flag == 0){
            if (cutiKhususController.drop(txtCutiKhususID.getText())){
                message = "Success to drop data...";
            }
            JOptionPane.showMessageDialog(this, message, "Notification", 
                    JOptionPane.QUESTION_MESSAGE);
        }
        bindingTable();
        reset();
    }//GEN-LAST:event_btnDropActionPerformed

        

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDrop;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnSave;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblCutiKhusus;
    private javax.swing.JTextField txtCutiKhususID;
    private javax.swing.JTextField txtNamaCuti;
    // End of variables declaration//GEN-END:variables

    /**
     * fungsi yang digunakan untuk menampilkan tabel data cuti khusus
     */
    public void bindingTable() {
        String[] header = {"Cuti Khusus ID", "Nama Cuti"};
        DefaultTableModel defaultTableModel = new DefaultTableModel(header, 0);
        for (CutiKhusus cutiKhusus : cutiKhususController.binding()) {
            Object[] cutiKhusus1 = {
                cutiKhusus.getCutiKhususId(), cutiKhusus.getNamaCuti()
            };
            defaultTableModel.addRow(cutiKhusus1);
        }
        tblCutiKhusus.setModel(defaultTableModel);
    }

    /**
     * fungsi yang digunakan untuk membersihkan data ketika menyimpan atau menghapus data
     */
    public void reset() {
        txtCutiKhususID.setText("");
        txtNamaCuti.setText("");
    }
}
